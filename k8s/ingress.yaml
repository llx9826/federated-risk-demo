# 联邦风控系统 - Ingress配置
# 提供外部访问入口和路由规则

---
# 主应用Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: federated-risk-ingress
  namespace: federated-risk
  labels:
    app: federated-risk
    component: ingress
  annotations:
    # Nginx配置
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    
    # CORS配置
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    
    # 限流配置
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # TLS证书
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    
    # 负载均衡
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - api.federated-risk.local
    - app.federated-risk.local
    - admin.federated-risk.local
    secretName: federated-risk-tls
  rules:
  # API路由
  - host: api.federated-risk.local
    http:
      paths:
      # API网关
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80
      
      # 同意服务
      - path: /consent
        pathType: Prefix
        backend:
          service:
            name: consent-service
            port:
              number: 7002
      
      # PSI服务
      - path: /psi
        pathType: Prefix
        backend:
          service:
            name: psi-service
            port:
              number: 7001
      
      # 模型服务
      - path: /model
        pathType: Prefix
        backend:
          service:
            name: model-serving
            port:
              number: 7003
      
      # 训练服务
      - path: /train
        pathType: Prefix
        backend:
          service:
            name: train-service
            port:
              number: 7004
      
      # 审计服务
      - path: /audit
        pathType: Prefix
        backend:
          service:
            name: audit-service
            port:
              number: 7005
      
      # 联邦编排器
      - path: /orchestrator
        pathType: Prefix
        backend:
          service:
            name: federated-orchestrator
            port:
              number: 7006
      
      # 模型训练器
      - path: /trainer
        pathType: Prefix
        backend:
          service:
            name: model-trainer
            port:
              number: 7007
      
      # 模型解释器
      - path: /explainer
        pathType: Prefix
        backend:
          service:
            name: model-explainer
            port:
              number: 7008
      
      # 模型部署
      - path: /deployment
        pathType: Prefix
        backend:
          service:
            name: model-deployment
            port:
              number: 7009
      
      # 特征存储
      - path: /features
        pathType: Prefix
        backend:
          service:
            name: feature-store
            port:
              number: 7010
      
      # 同意网关
      - path: /consent-gateway
        pathType: Prefix
        backend:
          service:
            name: consent-gateway
            port:
              number: 7011
  
  # 前端应用路由
  - host: app.federated-risk.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80
  
  # 管理后台路由
  - host: admin.federated-risk.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80

---
# 监控Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: monitoring-ingress
  namespace: federated-risk
  labels:
    app: monitoring
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Monitoring'
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - monitoring.federated-risk.local
    - grafana.federated-risk.local
    - prometheus.federated-risk.local
    secretName: monitoring-tls
  rules:
  # Prometheus
  - host: prometheus.federated-risk.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-server
            port:
              number: 80
  
  # Grafana
  - host: grafana.federated-risk.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 80
  
  # 监控总览
  - host: monitoring.federated-risk.local
    http:
      paths:
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-server
            port:
              number: 80
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 80

---
# 开发环境Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dev-ingress
  namespace: federated-risk
  labels:
    app: federated-risk
    component: ingress
    environment: development
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: nginx
  rules:
  # 开发API
  - host: dev-api.federated-risk.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80
  
  # 开发前端
  - host: dev-app.federated-risk.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80

---
# 内部服务Ingress（仅集群内访问）
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: internal-ingress
  namespace: federated-risk
  labels:
    app: federated-risk
    component: ingress
    access: internal
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
spec:
  ingressClassName: nginx-internal
  rules:
  # 内部API
  - host: internal.federated-risk.local
    http:
      paths:
      # 数据库管理
      - path: /pgadmin
        pathType: Prefix
        backend:
          service:
            name: pgadmin
            port:
              number: 80
      
      # Redis管理
      - path: /redis-commander
        pathType: Prefix
        backend:
          service:
            name: redis-commander
            port:
              number: 8081
      
      # 健康检查
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: api-gateway
            port:
              number: 80